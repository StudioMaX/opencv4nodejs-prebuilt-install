name: Create tagged release
on:
  push:
    tags:
      - v4.1.*

jobs:
  prebuild-node:
    name: 'Build on Node v${{ matrix.node }} ${{ matrix.os.name }} ${{ matrix.arch }}'
    runs-on: ${{ matrix.os.name }}-${{ matrix.os.version }}

    strategy:
      matrix:
        os:
          - name: Ubuntu
            version: latest
          - name: macOS
            version: latest
          - name: Windows
            version: 2019
        node: ['12','13','14','15','16','17','18','19']
        arch: [x64]
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.arch }}
      - name: 'Install npm@^8 to get a more up to date bundled node-gyp'
        run: npm install --global npm@8.3.1
      - name: 'Install Linux dependencies'
        if: ${{ matrix.os.name == 'Ubuntu' }}
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev
      - name: 'Install python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: 'Install Mac dependencies'
        if: ${{ matrix.os.name == 'macos' }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest
      - name: Install
        run: npm ci --unsafe-perm
      - name: Prebuild
        shell: bash
        run: npm run prebuild
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "prebuilds/*.tar.gz"
          allowUpdates: true

  deploy:
    needs:
      - prebuild-node
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: 'Install npm@^8'
        run: npm install --global npm@8.3.1
      - name: Install
        run: npm ci
      - name: Publish tagged release to npm
        run: |
          npm i clean-package -g
          npm whoami
          npm run publish_package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
